int var1 = 0
byte var2 = 0
short var3 = 0
long var4 = 0
double var5 = 0.0
float var6 = 0.0
char var7 = g
boolean var8 = false

int var1 = 2147483647
byte var2 = 64
short var3 = 28941
long var4 = 9223372036854775807
double var5 = 0.416854654654
float var6 = 0.1113598
char var7 = *
boolean var8 = true

int CONSTANT1 = 15
byte CONSTANT2 = 127
short CONSTANT3 = 32000
long CONSTANT4 = -9223372036854775808
double CONSTANT5 = 1.6546541346543234E14
float CONSTANT6 = 6.5464644E11
char CONSTANT7 = K
boolean CONSTANT8 = true

When you try to assign a value to a constant you
receive an error message which reads: "cannot
assign a value to a final variable CONSTANTS".

1
3
4
3
4
2
3
1
4
21
0
2.0
81.0
3
4

Please input two integers.
5
5

Number of Filled Jars: 7.333333333333333
Dividing two "double" type variables cannot 
return an "int" type variable; since they have different 
lengths of data that they hold. To fix this, change the 
"completelyFilledJars" variable to be of the "double" type.

3.5yards are10.5feet
3.5yards are126.0inches

Starting X value: 10
Starting Y value: -3
X after incrementing equals: 11
Y after incrementing equals: -2

PVann =10000*({[(1+0.08)^(20-1)-1]/0.08}/(1+0.08)^(20-1)+1)
106035.99200045236

To find the present value of an annuity, use the formula
PVann =PMT*({[(1+i)^(n-1)-1]/i}/(1+i)^(n-1)+1) 
Where: 
PMT: periodic payment 
i: periodic interest of compund rate 
n: number of payments 
Please input desired variables
PMT: 
10000
i (as a decimal): 
0.08
n: 
20
Present value of annuity: 106035.99200045236

average age: 36.75
The outcome of the program is 36.0 instead of  
the more accurate 36.75. This is because the remainder is 
not being shown. To fix this, change 4 to a floating-point 
number 4.00 and the fractional part will not be discarded. 

870
The outcome of the current program is 869.
This is due to some loss in data when converting 
from a double to an int data type. To fix this, use the 
Math.round method to round up to the next integer 

Output String: Tempus fugit
